# Copyright 2024 Google LLC

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     https://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# DAG parameters
# mandatory
dag_id: nested_task_groups_dag
description:
max_active_runs:
catchup: False
schedule_interval: None
tags: ["test"]
owner:


task_variables:
  variables_file_path: examples/composer_dag_tasks_variables/nested_task_groups_variables.py


# Define Python functions to be added in your Airflow DAG
custom_python_functions:
  custom_defined_functions:
    pull_xcom:
      description: Function to pull xcom variables from export GCS task print or use it for other transformations.
      code: |
        def pull_xcom(**kwargs):
          """
          Pulls a value from XCom and prints it.
          """
          ti = kwargs['ti']
          pulled_value = str(ti.xcom_pull(task_ids='export_sales_reporting_table_to_gcs', key='file_details'))
          print(f"Pulled value from XCom: {pulled_value}")
          return pulled_value


# Tasks specific configs
# mandatory
tasks:
  - task_id: create_datafusion_pipeline
    task_type: airflow.providers.google.cloud.operators.datafusion.CloudDataFusionStartPipelineOperator
    pipeline_name: test
    instance_name: test1
    location: us-west1
    project_id: composer-templates-dev
    depends_on: 
    trigger_rule : 'none_failed'

task_groups:
  - group_id: Simple_Task_Group
    tasks:
      - task_id: T1
        task_type: airflow.operators.dummy.DummyOperator
      - task_id: T2
        task_type: airflow.operators.dummy.DummyOperator
      - task_id: T21
        task_type: airflow.operators.dummy.DummyOperator
        depends_on:
          - T2
      - task_id: T22
        task_type: airflow.operators.dummy.DummyOperator
        depends_on:
          - T2
      - task_id: T3
        task_type: airflow.operators.dummy.DummyOperator
    task_groups:
      - group_id: Nested_Task_Group
        depends_on:
          - Simple_Task_Group
        tasks:
          - task_id: T4
            task_type: airflow.operators.dummy.DummyOperator
          - task_id: T5
            task_type: airflow.operators.dummy.DummyOperator
          - task_id: T51
            task_type: airflow.operators.dummy.DummyOperator
            depends_on:
              - T5
          - task_id: T52
            task_type: airflow.operators.dummy.DummyOperator
            depends_on:
              - T5
          - task_id: T6
            task_type: airflow.operators.dummy.DummyOperator


task_dependency:
  default_task_dependency: True

